{"version":3,"file":"static/js/173.e5fb497d.chunk.js","mappings":"2PACA,GAAgB,cAAgB,kCAAkC,kBAAoB,sCAAsC,iBAAmB,sC,SCyG/I,EAlGmB,WAClB,OAA4BA,EAAAA,EAAAA,KAApBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UACd,GAA0BC,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAaC,EAAAA,EAAAA,cAAY,SAACC,GAAD,OAAWA,EAAMC,KAAjB,IACzBC,GAAWC,EAAAA,EAAAA,eA0BXC,EAAa,SAACC,EAAcC,EAAGC,GAEpCV,EAASQ,GACT,IA1BwBG,EAAKC,EA0BvBC,GA1BkBF,EA0BSH,EA1BJI,EA0BkBF,GAzBjC,kBAAQE,GAAR,IAAcD,IAAAA,KA2BxBG,EAtBiB,SAACC,EAAKP,GAC3B,GAA0B,IAAtBP,EAAWe,OACd,OAAO,EAER,IAAMC,EAAShB,EAAWiB,KAAKC,QAAO,SAACT,GACtC,OAAOA,EAAKK,MAAQA,CACpB,IAAE,GAEH,YAAeK,IAAXH,IACHZ,GAASgB,EAAAA,EAAAA,KAAY,kBAAKJ,GAAN,IAAcN,IAAKH,OAChC,EAIR,CAQgBc,CAAcT,EAASE,IAAKP,GAEvCM,GACJT,GAASgB,EAAAA,EAAAA,IAAYR,GAEtB,EAED,OACC,UAACU,EAAA,GAAD,CAAMC,WAAS,EAACd,MAAI,EAACe,UAAU,SAASC,EAAG,EAA3C,WACC,SAACH,EAAA,GAAD,CAAMb,MAAI,EAACiB,OAAO,SAAlB,UACC,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMC,WAAW,MAApD,sBAID,SAACR,EAAA,GAAD,CAAMC,WAAS,EAACd,MAAI,EAACsB,cAAe,EAAGC,WAAY,EAAnD,SACEpC,EACEqC,MAAMC,KAAK,IAAID,MAAM,IAAIE,KAAI,SAAC3B,EAAG4B,GAAJ,OAC7B,UAACd,EAAA,GAAD,CAAMb,MAAI,EAAC4B,GAAI,EAAf,WACC,SAACC,EAAA,EAAD,CACCV,QAAQ,cACRW,OAAO,WAER,SAACD,EAAA,EAAD,KACA,SAACA,EAAA,EAAD,CAAUE,MAAM,UANMJ,EADM,IAU7BzC,EAAKA,KAAKwC,KAAI,SAAC1B,GAAD,OACd,SAACa,EAAA,GAAD,CAAMb,MAAI,EAACgC,GAAI,GAAIC,GAAI,EAAGL,GAAI,EAA9B,UACC,iBAAKM,UAAWC,EAAAA,UAAhB,WACC,gBAAKD,UAAWC,EAAAA,cAAhB,UACC,gBACCC,IACCC,2BACArC,EAAKoC,IAENE,IAAKtC,EAAKuC,WAGZ,iBAAKL,UAAWC,EAAAA,kBAAhB,WACC,SAACjB,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiCnB,EAAKuC,SACtC,SAAC,IAAD,CACCC,IAAK,EACLC,IAAK,EACLC,aAAcrD,EACdsD,OAAQ,SAACC,EAAMC,GAAP,OACPhD,EAAW+C,EAAMC,EAAS7C,EADnB,QAKV,iBAAKkC,UAAWC,EAAAA,iBAAhB,WACC,UAACjB,EAAA,EAAD,CAAYC,QAAQ,UAApB,UACEnB,EAAK8C,SADP,qBACmC,QAEnC,UAAC5B,EAAA,EAAD,CAAYC,QAAQ,UAApB,0BAA4CnB,EAAK+C,gBA1Bd/C,EAAKK,IAD7B,QAmCpB,C","sources":["webpack://camping/./src/components/content/Order/ChooseTent/ChooseTent.module.less?ee19","components/content/Order/ChooseTent/ChooseTent.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tent_item_img\":\"ChooseTent_tent_item_img__OeBRc\",\"tent_item_stepper\":\"ChooseTent_tent_item_stepper__mXOdi\",\"tent_item_detail\":\"ChooseTent_tent_item_detail__X3y-s\"};","import React, { useState } from 'react'\r\nimport { CssBaseline, Grid, Skeleton, Typography } from '@mui/material'\r\nimport { InputNumber } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useGetTentsQuery } from '../../../../store/reducers/tentsReducers'\r\nimport { setTentInfo } from '../../../../store/reducers/orderReducers'\r\nimport styles from './ChooseTent.module.less'\r\n\r\nconst ChooseTent = () => {\r\n\tconst { data, isLoading } = useGetTentsQuery()\r\n\tconst [value, setValue] = useState(0)\r\n\tconst orderState = useSelector((state) => state.order)\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// 整理帐篷的信息\r\n\tconst combineTentInfo = (num, info) => {\r\n\t\tconst tentInfo = { ...info, num }\r\n\t\treturn tentInfo\r\n\t}\r\n\r\n\t// 是否已存在帐篷\r\n\tconst isTentExisted = (_id, currentValue) => {\r\n\t\tif (orderState.length === 0) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tconst target = orderState.tent.filter((item) => {\r\n\t\t\treturn item._id === _id\r\n\t\t})[0]\r\n\r\n\t\tif (target !== undefined) {\r\n\t\t\tdispatch(setTentInfo({ ...target, num: currentValue }))\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\t// 改变步进器\r\n\tconst changeStep = (currentValue, _, item) => {\r\n\t\t// console.log(currentValue)\r\n\t\tsetValue(currentValue)\r\n\t\tconst tentInfo = combineTentInfo(currentValue, item)\r\n\t\t// 判断用户的账单里是否已经有同一顶帐篷\r\n\t\tlet isExisted = isTentExisted(tentInfo._id, currentValue)\r\n\t\t// 若没有，则可以添加\r\n\t\tif (!isExisted) {\r\n\t\t\tdispatch(setTentInfo(tentInfo))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid container item direction=\"column\" p={2}>\r\n\t\t\t<Grid item margin=\"30px 0\">\r\n\t\t\t\t<Typography variant=\"h5\" component=\"div\" fontWeight=\"500\">\r\n\t\t\t\t\tTents\r\n\t\t\t\t</Typography>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid container item columnSpacing={2} rowSpacing={2}>\r\n\t\t\t\t{isLoading\r\n\t\t\t\t\t? Array.from(new Array(5)).map((_, i) => (\r\n\t\t\t\t\t\t\t<Grid item md={6} key={i}>\r\n\t\t\t\t\t\t\t\t<Skeleton\r\n\t\t\t\t\t\t\t\t\tvariant=\"rectangular\"\r\n\t\t\t\t\t\t\t\t\theight=\"100px\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Skeleton />\r\n\t\t\t\t\t\t\t\t<Skeleton width=\"60%\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t: data.data.map((item) => (\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={6} key={item._id}>\r\n\t\t\t\t\t\t\t\t<div className={styles.tent_item}>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.tent_item_img}>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\tprocess.env.REACT_APP_DEV_URL +\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.src\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\talt={item.title}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.tent_item_stepper}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\">{item.title}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<InputNumber\r\n\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\tmax={2}\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={value}\r\n\t\t\t\t\t\t\t\t\t\t\tonStep={(step, options) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tchangeStep(step, options, item)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.tent_item_detail}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\r\n\t\t\t\t\t\t\t\t\t\t\t{item.capacity} person capacity -{' '}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"caption\">Starting at ${item.price}</Typography>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t  ))}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\nexport default ChooseTent\r\n"],"names":["useGetTentsQuery","data","isLoading","useState","value","setValue","orderState","useSelector","state","order","dispatch","useDispatch","changeStep","currentValue","_","item","num","info","tentInfo","isExisted","_id","length","target","tent","filter","undefined","setTentInfo","isTentExisted","Grid","container","direction","p","margin","Typography","variant","component","fontWeight","columnSpacing","rowSpacing","Array","from","map","i","md","Skeleton","height","width","xs","sm","className","styles","src","process","alt","title","min","max","defaultValue","onStep","step","options","capacity","price"],"sourceRoot":""}